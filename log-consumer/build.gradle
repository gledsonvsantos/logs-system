plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "io.freefair.lombok" version "8.11"
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
	set('opentelemetryVersion', "1.32.0")
	set('mapstructVersion', "1.5.5.Final")
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.kafka:spring-kafka'

	// Database
	runtimeOnly 'org.postgresql:postgresql'

	// Observability
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation "io.opentelemetry:opentelemetry-api:${opentelemetryVersion}"
	implementation "io.opentelemetry:opentelemetry-sdk:${opentelemetryVersion}"
	implementation "io.opentelemetry:opentelemetry-exporter-otlp:${opentelemetryVersion}"
	implementation 'io.micrometer:micrometer-tracing-bridge-otel:1.2.2'

	// Logstash
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

	// MapStruct
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	
	// Annotation Processors (ordem Ã© importante)
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
